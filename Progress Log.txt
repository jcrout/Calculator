Day 1: spent probably 5-6 hours thinking of the design and creating some basic classes.

Day 2: spent 4~ hours attempting to write the default equation parser

Day 3: Finished the basic implementation of the default equation parser, for now.
	   Currently it can:
	    -Contain subexpressions with delimiters, currently just "( ), [ ]", but can easily add more to the arrays
		-Find any function typed as a string within the equation, and evaluate it with the correct number of arguments with a comma as the delimiter
		-Include any number of constants, which can either be simple numbers like '55.7' or subexpressions like B = 'X - 5'
		-Works with any number of spaces between individual entities, or without any spaces anywhere
		-Allows some shorthand notation:
			-"2X" instead of "2 * X"
			-"3(X - 5)" instead of "3 * (X - 5)"
	   Future additions:
		-Allow multiple constants in a row, such as "3ABX", which will eventually be translated to "3*A*B*X" at some point
		-Check for errors during equation parsing and give the appropriate error messages
		-Unit Tests for parsing
		
Day 4: Included a utility class project within this project
       Started GraphBox control deriving from PictureBox
	-Draws axis marks, tick marks, and equation lines
	-Settings class to specify various things, such as whether to show tick marks or gridlines and such
	
Day 5: GraphBox is now threadsafe, and can draw multiple equations at once
       EquationParser can now handle:
	-Multiple constants in a row
	-Variables/Constants of varying lengths, case insensitive
	-Incomplete decimal numbers, such as .5 instead of 0.5
       EquationParser now has a seperate private class for formatting the equation text
       Constants with non-simple values are now evaluated to a variable within the delegate before invoking the main body
       Functions and non-simple Constants are now replaced using $000$ format

Day 6-7: Some equation validation/extension support, not much time spent on this

Day 8-12: Some more equation validation and parsing refactoring
	  GUI primitives, including EquationBox + Base, EquationBoxContainer + Base, ConstantBox + Base, CloseBox + Base
	  Can now graph functions from textbox input, though it is in its most basic form